# SEAM Pattern Table - Single Source of Truth
# Uses TOML literal strings (''') to avoid regex escaping nightmares

[components]
sentence_end_punct = '[.!?]'
non_sentence_ending_punct = '[,:;]'
soft_separator = '[ \t]+'
line_boundary = '(?:\r?\n)'
hard_separator = '(?:\r\n\r\n|\n\n)'
non_dialog_sentence_start_chars = '[A-Z0-9]'
dialog_prefix_whitespace = '[ \t\n]'

# Character class components with explicit substitution rules
[character_classes]
sentence_starts = { value = '''A-Z0-9"'\u{201C}\u{2018}\(\[\{''', format = "as_class" }
not_sentence_starts = { value = '''A-Z0-9"'\u{201C}\u{2018}\(\[\{''', format = "as_negated_class" }
dialog_open_chars = { value = '''["'\u{201C}\u{2018}\(\[\{]''', format = "as_class_inner" }

[dialog_states.double_quote]
open = '"'
close = '"'
state_name = "DialogDoubleQuote"

[dialog_states.single_quote]
open = "'"
close = "'"
state_name = "DialogSingleQuote"

[dialog_states.smart_double]
open = '\u{201C}'
close = '\u{201D}'
state_name = "DialogSmartDoubleOpen"

[dialog_states.smart_single]
open = '\u{2018}'
close = '\u{2019}'
state_name = "DialogSmartSingleOpen"

[dialog_states.round_paren]
open = '\('
close = '\)'
state_name = "DialogParenthheticalRound"

[dialog_states.square_bracket]
open = '\['
close = '\]'
state_name = "DialogParenthheticalSquare"

[dialog_states.curly_brace]
open = '\{'
close = '\}'
state_name = "DialogParenthheticalCurly"

# Pattern templates - applied to ALL dialog states
[[pattern_templates]]
name = "external_separation_split"
regex = '{close}{sentence_end_punct}({soft_separator})[{sentence_starts}]'
match_type = "DialogEnd"
next_state = "Narrative"

[[pattern_templates]]
name = "external_separation_continue"
regex = '{close}{sentence_end_punct}({soft_separator}){not_sentence_starts}'
match_type = "DialogSoftEnd"
next_state = "Narrative"

[[pattern_templates]]
name = "external_separation_to_dialog"
regex = '{close}{sentence_end_punct}({soft_separator}){dialog_open_chars}'
match_type = "DialogOpen"
next_state = "Unknown"

[[pattern_templates]]
name = "external_continuation"
regex = '{close}{non_sentence_ending_punct}({soft_separator}).'
match_type = "DialogSoftEnd"
next_state = "Narrative"

[[pattern_templates]]
name = "internal_hard_end"
regex = '{sentence_end_punct}{close}[,:;]*({soft_separator})[{sentence_starts}]'
match_type = "DialogEnd"
next_state = "Narrative"

[[pattern_templates]]
name = "internal_soft_end_punctuated"
regex = '{sentence_end_punct}{close}[,:;]*({soft_separator}){not_sentence_starts}'
match_type = "DialogSoftEnd"
next_state = "Narrative"

[[pattern_templates]]
name = "internal_continuation"
regex = '[^.!?]{close}[,:;]*({soft_separator}){dialog_open_chars}'
match_type = "DialogOpen"
next_state = "Unknown"

[[pattern_templates]]
name = "internal_soft_end_unpunctuated"
regex = '[^.!?]{close}[,:;]*({soft_separator})[^{dialog_open_chars}]'
match_type = "DialogSoftEnd"
next_state = "Narrative"